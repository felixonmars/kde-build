Welcome to Pierre's simple and stupid scripts to semi-automate the maintaince of KDE!

== Requrements ==
* devtools (these scripts use the chroots in /var/tmp/archbuild/)
** To build packages for kde-unstable create the kde-unstable-{i686,x86_64}-build symlink to archbuild
* ssh access to archlinux.org and ktown.kde.org without user interaction
* set sudo to allow running makechrootpkg without password
* set SRCDEST and INTEGRITY_CHECK=('sha1') in makepkg.conf

== Usage by file ==
* build-packages: run makechrootpkg for all packages and install those that are defined in kde-dep-packages.
  It will fail if a packages from kde-dep-packages will fail. Other broken packages will be just skipped and shown at the end.
* checkout-packages: checkout the working tree from svn.archlinux.org
* cleanup-packages: remove any logs, packages, src and pkg dirs from the working copy
* commit-packages: commit all changes to the svn branch (usually trunk). This does not release any package
* config: set version, branch and if l10n packages should be build. Also the target repo can be set.
* create-kdemeta: this create a splitted PKGBUILD for kde-meta packages
* create-l10n: this create a splitted PKGBUILD for l10n packages; remember to enable l10n in config.
* download-packages: Load the sources from KDE server. If they are already downloaded just check integrity.
* install-packages: install all kde packages from the build dir
* release-packages: run archrelease. This actually releases the packages. Note: You have tu run upload-packages before.
* repackage: repackage all packages. Usefull for changes to the PKGBUILD that do not require a rebuild
* run-namcap: run namcap on all packages and store the result to namcap.log
* show-namcap: show namcap.log for all packages.
* syncrepo: was used to keep i686 and x86_64 kde-unstable in sync
* uninstall-packages: uninstall all KDE packages. Should be done before building.
* update-pkgbuids: updates pkgver to the one configured in config; resets pkgrel to 1. It also updates the checksum array.
* upload-packages: upload all packages to your staging dir

== Sample workflow ==
* edit config to your needs
* run download-packages to get all sources
* run checkout-packages to get the abs working tree
* run update-pkgbuilds to update all PKGBUILDs
* optional edit PKGBUILDs (e.g. remove old patches etc.)
* build all packages using build-packages.
  Add i686 as args if you are on x86_64 and you want to build i686 packages
* run-namcap and have a look at the logs with show-namcap
* maybe you want to repackage after some meta changes; make sure to run-namcap again
* run upload-packages to upload package into your staging dir
* run release-packages to move all packages to the repo.
